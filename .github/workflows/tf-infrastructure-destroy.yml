# name: destroy Terraform code for tf-infrastructure folder
# on:
#   push:
#     branches:
#       - tsrlearnindev
#       # - main
#     paths:
#       - "Docker/infrastructure/**"
#       - ".github/workflows/tf-infrastructure-deployment.yml"

# env:
#   terraform_version: "1.1.7"
#   workdir: "Docker/infrastructure/"
#   TF_VAR_custom_data: "${{ github.workspace }}/Docker/infrastructure/scripts/install_docker.sh"
#   TF_VAR_private_key: ${{ secrets.private_key }}
#   TF_VAR_client_secret: "${{ secrets.client_secret }}"
#   TF_VAR_login_password: "${{ secrets.login_password }}"
#   ARM_CLIENT_ID: b26145ad-4bdc-4af7-bc86-8dc3d89e9d4e
#   ARM_CLIENT_SECRET: ${{ secrets.client_secret }}
#   ARM_TENANT_ID: 389dc11c-508a-4f1e-a529-1f19aa1a8e7b
#   ARM_SUBSCRIPTION_ID: f823a9e2-b296-41ab-b452-5f2c01eefae8

# jobs:
#   Terrraform-deployments:
#     # runs-on: [self-hosted, linux, x64]
#     runs-on: ubuntu-latest
#     steps:
#       - name: Git checkout
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20'

#       - name: Terraform install version
#         uses: hashicorp/setup-terraform@v3
#         with:
#           terraform_version: ${{ env.terraform_version }}

#       - name: Install Azure CLI
#         run: |
#           curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      
#       - name: Azure CLI login
#         run: az login --service-principal -u "${{ env.ARM_CLIENT_ID }}" -p"${{ env.TF_VAR_client_secret }}" --tenant "${{ env.ARM_TENANT_ID }}"

#       - name: terraform init
#         run: cd ${{ github.workspace }}/${{ env.workdir }} && terraform init
#         env:
#           ARM_CLIENT_SECRET: ${{ env.ARM_CLIENT_SECRET }}
#           ARM_CLIENT_ID:  ${{ env.ARM_CLIENT_ID }}
#           ARM_TENANT_ID: ${{ env.ARM_TENANT_ID }}
#           ARM_SUBSCRIPTION_ID: ${{ env.ARM_SUBSCRIPTION_ID }}

#       - name: terraform fmt
#         run: cd ${{ github.workspace }}/${{ env.workdir }} && terraform fmt .
#         env:
#           ARM_CLIENT_SECRET: ${{ env.ARM_CLIENT_SECRET }}
#           ARM_CLIENT_ID:  ${{ env.ARM_CLIENT_ID }}
#           ARM_TENANT_ID: ${{ env.ARM_TENANT_ID }}
#           ARM_SUBSCRIPTION_ID: ${{ env.ARM_SUBSCRIPTION_ID }}

#       - name: terraform validate
#         run: cd ${{ github.workspace }}/${{ env.workdir }} && terraform validate
#         env:
#           ARM_CLIENT_SECRET: ${{ env.ARM_CLIENT_SECRET }}
#           ARM_CLIENT_ID:  ${{ env.ARM_CLIENT_ID }}
#           ARM_TENANT_ID: ${{ env.ARM_TENANT_ID }}
#           ARM_SUBSCRIPTION_ID: ${{ env.ARM_SUBSCRIPTION_ID }}

#       - name: terraform plan
#         run: cd ${{ github.workspace }}/${{ env.workdir }} && terraform plan -no-color
#         env:
#           ARM_CLIENT_SECRET: ${{ env.ARM_CLIENT_SECRET }}
#           ARM_CLIENT_ID:  ${{ env.ARM_CLIENT_ID }}
#           ARM_TENANT_ID: ${{ env.ARM_TENANT_ID }}
#           ARM_SUBSCRIPTION_ID: ${{ env.ARM_SUBSCRIPTION_ID }}

#       - name: terraform destroy
#         run: cd ${{ github.workspace }}/${{ env.workdir }} && terraform destroy -auto-approve
#         env:
#           ARM_CLIENT_SECRET: ${{ env.ARM_CLIENT_SECRET }}
#           ARM_CLIENT_ID:  ${{ env.ARM_CLIENT_ID }}
#           ARM_TENANT_ID: ${{ env.ARM_TENANT_ID }}
#           ARM_SUBSCRIPTION_ID: ${{ env.ARM_SUBSCRIPTION_ID }}